CREATE OR REPLACE PACKAGE PKG_DISCIPLINA AS
  PROCEDURE cadastrar_disciplina(p_nome VARCHAR2, p_descricao VARCHAR2, p_carga_horaria NUMBER);
  CURSOR total_alunos_por_disciplina IS
    SELECT d.nome, COUNT(m.id_aluno) AS total_alunos
    FROM disciplinas d
    JOIN matriculas m ON d.id_disciplina = m.id_disciplina
    GROUP BY d.nome
    HAVING COUNT(m.id_aluno) > 10;
  FUNCTION media_idade_por_disciplina(p_id_disciplina NUMBER) RETURN NUMBER;
  PROCEDURE listar_alunos_por_disciplina(p_id_disciplina NUMBER);
END PKG_DISCIPLINA;
/

CREATE OR REPLACE PACKAGE BODY PKG_DISCIPLINA AS
  PROCEDURE cadastrar_disciplina(p_nome VARCHAR2, p_descricao VARCHAR2, p_carga_horaria NUMBER) IS
  BEGIN
    INSERT INTO disciplinas (nome, descricao, carga_horaria)
    VALUES (p_nome, p_descricao, p_carga_horaria);
    COMMIT;
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      RAISE_APPLICATION_ERROR(-20003, 'Erro ao cadastrar disciplina: ' || SQLERRM);
  END cadastrar_disciplina;

  FUNCTION media_idade_por_disciplina(p_id_disciplina NUMBER) RETURN NUMBER IS
    v_media NUMBER;
  BEGIN
    SELECT AVG(TRUNC(MONTHS_BETWEEN(SYSDATE, a.data_nascimento) / 12))
    INTO v_media
    FROM alunos a
    JOIN matriculas m ON a.id_aluno = m.id_aluno
    WHERE m.id_disciplina = p_id_disciplina;
    RETURN NVL(v_media, 0);
  EXCEPTION
    WHEN OTHERS THEN
      RAISE_APPLICATION_ERROR(-20004, 'Erro ao calcular m√©dia de idade: ' || SQLERRM);
  END media_idade_por_disciplina;

  PROCEDURE listar_alunos_por_disciplina(p_id_disciplina NUMBER) IS
  BEGIN
    FOR r IN (SELECT a.nome
              FROM alunos a
              JOIN matriculas m ON a.id_aluno = m.id_aluno
              WHERE m.id_disciplina = p_id_disciplina) LOOP
      DBMS_OUTPUT.PUT_LINE(r.nome);
    END LOOP;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE_APPLICATION_ERROR(-20005, 'Erro ao listar alunos por disciplina: ' || SQLERRM);
  END listar_alunos_por_disciplina;
END PKG_DISCIPLINA;
/
